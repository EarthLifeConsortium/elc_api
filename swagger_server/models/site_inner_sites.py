# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class SiteInnerSites(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, site_id: int=None, lat: float=None, lon: float=None, site_name: str=None):
        """
        SiteInnerSites - a model defined in Swagger

        :param site_id: The site_id of this SiteInnerSites.
        :type site_id: int
        :param lat: The lat of this SiteInnerSites.
        :type lat: float
        :param lon: The lon of this SiteInnerSites.
        :type lon: float
        :param site_name: The site_name of this SiteInnerSites.
        :type site_name: str
        """
        self.swagger_types = {
            'site_id': int,
            'lat': float,
            'lon': float,
            'site_name': str
        }

        self.attribute_map = {
            'site_id': 'site_id',
            'lat': 'lat',
            'lon': 'lon',
            'site_name': 'site_name'
        }

        self._site_id = site_id
        self._lat = lat
        self._lon = lon
        self._site_name = site_name

    @classmethod
    def from_dict(cls, dikt) -> 'SiteInnerSites':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The site_inner_sites of this SiteInnerSites.
        :rtype: SiteInnerSites
        """
        return deserialize_model(dikt, cls)

    @property
    def site_id(self) -> int:
        """
        Gets the site_id of this SiteInnerSites.
        Unique identifier for a specific site from the respective databases

        :return: The site_id of this SiteInnerSites.
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id: int):
        """
        Sets the site_id of this SiteInnerSites.
        Unique identifier for a specific site from the respective databases

        :param site_id: The site_id of this SiteInnerSites.
        :type site_id: int
        """

        self._site_id = site_id

    @property
    def lat(self) -> float:
        """
        Gets the lat of this SiteInnerSites.
        Site latitude

        :return: The lat of this SiteInnerSites.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat: float):
        """
        Sets the lat of this SiteInnerSites.
        Site latitude

        :param lat: The lat of this SiteInnerSites.
        :type lat: float
        """

        self._lat = lat

    @property
    def lon(self) -> float:
        """
        Gets the lon of this SiteInnerSites.

        :return: The lon of this SiteInnerSites.
        :rtype: float
        """
        return self._lon

    @lon.setter
    def lon(self, lon: float):
        """
        Sets the lon of this SiteInnerSites.

        :param lon: The lon of this SiteInnerSites.
        :type lon: float
        """

        self._lon = lon

    @property
    def site_name(self) -> str:
        """
        Gets the site_name of this SiteInnerSites.
        Site name

        :return: The site_name of this SiteInnerSites.
        :rtype: str
        """
        return self._site_name

    @site_name.setter
    def site_name(self, site_name: str):
        """
        Sets the site_name of this SiteInnerSites.
        Site name

        :param site_name: The site_name of this SiteInnerSites.
        :type site_name: str
        """

        self._site_name = site_name

