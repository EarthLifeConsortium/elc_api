# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class AssemblageInnerTable(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, taxon: str=None, element: str=None, value: int=None):
        """
        AssemblageInnerTable - a model defined in Swagger

        :param taxon: The taxon of this AssemblageInnerTable.
        :type taxon: str
        :param element: The element of this AssemblageInnerTable.
        :type element: str
        :param value: The value of this AssemblageInnerTable.
        :type value: int
        """
        self.swagger_types = {
            'taxon': str,
            'element': str,
            'value': int
        }

        self.attribute_map = {
            'taxon': 'taxon',
            'element': 'element',
            'value': 'value'
        }

        self._taxon = taxon
        self._element = element
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'AssemblageInnerTable':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The assemblage_inner_table of this AssemblageInnerTable.
        :rtype: AssemblageInnerTable
        """
        return deserialize_model(dikt, cls)

    @property
    def taxon(self) -> str:
        """
        Gets the taxon of this AssemblageInnerTable.
        netsi

        :return: The taxon of this AssemblageInnerTable.
        :rtype: str
        """
        return self._taxon

    @taxon.setter
    def taxon(self, taxon: str):
        """
        Sets the taxon of this AssemblageInnerTable.
        netsi

        :param taxon: The taxon of this AssemblageInnerTable.
        :type taxon: str
        """

        self._taxon = taxon

    @property
    def element(self) -> str:
        """
        Gets the element of this AssemblageInnerTable.
        netsi

        :return: The element of this AssemblageInnerTable.
        :rtype: str
        """
        return self._element

    @element.setter
    def element(self, element: str):
        """
        Sets the element of this AssemblageInnerTable.
        netsi

        :param element: The element of this AssemblageInnerTable.
        :type element: str
        """

        self._element = element

    @property
    def value(self) -> int:
        """
        Gets the value of this AssemblageInnerTable.
        netsi

        :return: The value of this AssemblageInnerTable.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value: int):
        """
        Sets the value of this AssemblageInnerTable.
        netsi

        :param value: The value of this AssemblageInnerTable.
        :type value: int
        """

        self._value = value

