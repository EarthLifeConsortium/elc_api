---
swagger: "2.0"
info:
  description: "Composite interface to the Neotoma and PBDB databases"
  version: "1.0"
  title: "EarthLife Consortium Public API"
  contact:
    url: "http://earthlifeconsortium.org"
basePath: "/api_v1"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /age:
    get:
      tags:
      - "info"
      summary: "Generation method of age estimates for the occurrence or site"
      description: "Samples often have assigned temporal uncertainty estimates, whether\
        \ from C-14 dates, stratigraphic uncertainty, or other dating techniques.\
        \  This endpoint returns the basis for the age uncertainty estimate"
      operationId: "controllers.age_basis_controller.age"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "occid"
        in: "query"
        description: "Unique numeric ID, or vector of IDs for occurrences"
        required: false
        type: "integer"
        format: "int32"
      - name: "siteid"
        in: "query"
        description: "Unique numeric ID, or vector of IDs for sites"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "age basis response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/age_basis"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-tags:
      - tag: "info"
  /grid:
    get:
      tags:
      - "primary"
      summary: "Gridded assemblage data"
      description: "Returns assemblage data at pre-built grid sizes for faster returns"
      operationId: "controllers.gridded_assemblage_controller.grid"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "agebound"
        in: "query"
        description: "netsi"
        required: false
        type: "string"
      - name: "agebin"
        in: "query"
        description: "netsi"
        required: false
        type: "string"
      - name: "ageunit"
        in: "query"
        description: "netsi"
        required: false
        type: "string"
      - name: "bbox"
        in: "query"
        description: "netsi"
        required: false
        type: "string"
      - name: "spatialbin"
        in: "query"
        description: "netsi"
        required: false
        type: "string"
      - name: "varunit"
        in: "query"
        description: "netsi"
        required: false
        type: "string"
      - name: "presence"
        in: "query"
        description: "netsi"
        required: false
        type: "boolean"
      responses:
        200:
          description: "grid response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/assemblage"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-tags:
      - tag: "primary"
  /occ:
    get:
      tags:
      - "primary"
      summary: "Fossil occurrences in a specific place and time"
      description: "Return fossil occurrences from the Paleobiology (PBDB) and Neotoma\
        \ Databases."
      operationId: "controllers.taxonomic_occurrence_controller.occ"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "bbox"
        in: "query"
        description: "Bounding box definition, either as a numeric vector of form\
          \ [lonW, latS, lonE, latN] or as structured WKT text"
        required: false
        type: "string"
      - name: "minage"
        in: "query"
        description: "The most recent age for the temporal search window. By default\
          \ the minage is  present, or not used in queries. Units are millions of\
          \ years ago, unless defined using agescale"
        required: false
        type: "number"
        format: "double"
      - name: "maxage"
        in: "query"
        description: "The oldest age for the temporal search window. Units are millions\
          \ of years ago, unless defined using agescale"
        required: false
        type: "number"
        format: "double"
      - name: "agescale"
        in: "query"
        description: "The units for maxage and minage. Allowable units are yr, kyr\
          \ or Myr"
        required: false
        type: "string"
      - name: "timerule"
        in: "query"
        description: "Control the application of the temporal bounding box. May choose\
          \ one of three rules, contain, all samples must be fully within the temporal\
          \ bounding box; major, more than half of an occurrences temporal uncertainty\
          \ must be within the bounding box; overlap, any portion of an occurrence\
          \ may be withing the bounding box"
        required: false
        type: "string"
      - name: "taxon"
        in: "query"
        description: "Taxonomic name. May be truncated, a list of taxa or use wildcards.\
          \ If a specific taxon ID or a vector of IDs is known that parameter can\
          \ be passed through taxon. Taxon lists must be passed using JSON formating.\
          \ By default, returns only taxa named in the query. Use includelower if\
          \ all lower taxa are desired"
        required: false
        type: "string"
      - name: "includelower"
        in: "query"
        description: "Retrieve lower taxa. A boolean. If TRUE, all species and subspecies\
          \ of a named genera will be included in the response"
        required: false
        type: "boolean"
      - name: "limit"
        in: "query"
        description: "Limit the number of records in the response for large queries"
        required: false
        type: "integer"
        format: "int32"
      - name: "offset"
        in: "query"
        description: "Begin the response from a designated point within the larger\
          \ query. In this way, <i>limit</i> and <i>offset</i> can be used to produce\
          \ serial queries to the API to avoid issues with larger responses"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "occurrence response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/occurrence"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-tags:
      - tag: "primary"
  /pub:
    get:
      tags:
      - "info"
      summary: "Scientific publications associated with sites or occurrences"
      description: "Uses unique site IDs or occurrence IDs to return the set of publications\
        \ associated with a query to enable citation"
      operationId: "controllers.publication_controller.pub"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "occid"
        in: "query"
        description: "Unique numeric ID, or vector of IDs for occurrences"
        required: false
        type: "integer"
        format: "int32"
      - name: "siteid"
        in: "query"
        description: "Unique numeric ID, or vector of IDs for sites"
        required: false
        type: "integer"
        format: "int32"
      - name: "format"
        in: "query"
        description: "Output format for publications. Default response is BibJSON,\
          \ however many publications are not formatted properly for BibJSON, and\
          \ so caution should be exercised. Response may be bibJSON or APA"
        required: false
        type: "string"
      responses:
        200:
          description: "publication response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/publication"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-tags:
      - tag: "info"
  /site:
    get:
      tags:
      - "primary"
      summary: "Sample sites or localities"
      description: "Return sampling locations in space and time, excluding occurrence\
        \ records. This may return multiple stes from a common spatial location if\
        \ the samples from the synthetic sites represent unique collections. This\
        \ terminology is similar to the the datasets concept in Neotoma"
      operationId: "controllers.geoloc_site_controller.site"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "occid"
        in: "query"
        description: "Unique numeric ID, or vector of IDs for occurrences"
        required: false
        type: "integer"
        format: "int32"
      - name: "bbox"
        in: "query"
        description: "Bounding box definition, either as a numeric vector of form\
          \ [lonW, latS, lonE, latN] or as structured WKT text"
        required: false
        type: "string"
      - name: "minage"
        in: "query"
        description: "The most recent age for the temporal search window. By default\
          \ the minage is  present, or not used in queries. Units are millions of\
          \ years ago, unless defined using agescale"
        required: false
        type: "number"
        format: "double"
      - name: "maxage"
        in: "query"
        description: "The oldest age for the temporal search window. Units are millions\
          \ of years ago, unless defined using agescale"
        required: false
        type: "number"
        format: "double"
      - name: "agescale"
        in: "query"
        description: "The units for maxage and minage. Allowable units are yr, kyr\
          \ or Myr"
        required: false
        type: "string"
      - name: "timerule"
        in: "query"
        description: "Control the application of the temporal bounding box. May choose\
          \ one of three rules, contain, all samples must be fully within the temporal\
          \ bounding box; major, more than half of an occurrences temporal uncertainty\
          \ must be within the bounding box; overlap, any portion of an occurrence\
          \ may be withing the bounding box"
        required: false
        type: "string"
      - name: "taxon"
        in: "query"
        description: "Taxonomic name. May be truncated, a list of taxa or use wildcards.\
          \ If a specific taxon ID or a vector of IDs is known that parameter can\
          \ be passed through taxon. Taxon lists must be passed using JSON formating.\
          \ By default, returns only taxa named in the query. Use includelower if\
          \ all lower taxa are desired"
        required: false
        type: "string"
      - name: "includelower"
        in: "query"
        description: "A boolean, if TRUE, all species and subspecies lower taxa of\
          \ a named genera will be included in the response"
        required: false
        type: "boolean"
      responses:
        200:
          description: "site response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/site"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-tags:
      - tag: "primary"
  /taxon:
    get:
      tags:
      - "info"
      summary: "Taxonomic information, or hierarchy"
      description: "Returns detailed taxonomic information for the given query. Queries\
        \ may include partial matches, and may request lower taxa using the boolean\
        \ includelower parameter. In cases where hierarchy is also requested the user\
        \ may set hierarchy to TRUE"
      operationId: "controllers.taxonomic_hierarchy_controller.taxon"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "taxon"
        in: "query"
        description: "Taxonomic name. May be truncated, a list of taxa or use wildcards.\
          \ If a specific taxon ID or a vector of IDs is known that parameter can\
          \ be passed through taxon. Taxon lists must be passed using JSON formating.\
          \ By default, returns only taxa named in the query. If all lower taxa are\
          \ desired in the return, use includelower"
        required: false
        type: "string"
      - name: "includelower"
        in: "query"
        description: "If TRUE, all species and subspecies of a named genera will be\
          \ included in the response"
        required: false
        type: "boolean"
      - name: "hierarchy"
        in: "query"
        description: "If TRUE, the full hierarchy for the taxon will be included in\
          \ the response, otherwise just the unique entry for a match"
        required: false
        type: "boolean"
      responses:
        200:
          description: "taxon response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/taxonomy"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-tags:
      - tag: "info"
definitions:
  publication:
    type: "object"
    properties:
      pub_id:
        type: "integer"
        format: "int32"
        description: "Unique identifier for a specific publication from the respective\
          \ databases. Neotoma publications are prepended with ndb and PBDB publications\
          \ are prepended with pdb"
      pub:
        type: "string"
        description: "Publication data, either as bibJSON or text string"
      sites:
        type: "array"
        description: "If a vector of sites is passed to the query then the sites associated\
          \ with this publication are listed here as a vector"
        items:
          type: "integer"
          format: "int32"
      occs:
        type: "array"
        description: "If a vector of occurrences is passed to the query then the occurrences\
          \ associated with this publication are listed here as a vector"
        items:
          type: "integer"
          format: "int32"
  taxonomy:
    type: "array"
    items:
      $ref: "#/definitions/taxonomy_inner"
  site:
    type: "array"
    items:
      $ref: "#/definitions/site_inner"
  age_basis:
    type: "string"
    description: "Basis of age estimate for the given site or occurence"
  occurrence:
    type: "object"
    properties:
      occ_id:
        type: "integer"
        format: "int32"
        description: "Unique occurrence ID"
      taxon:
        type: "string"
        description: "Taxonomic name"
  assemblage:
    type: "array"
    items:
      $ref: "#/definitions/assemblage_inner"
  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
  taxonomy_inner:
    properties:
      taxon:
        type: "string"
        description: "Taxonomic name"
      hierarchy:
        type: "string"
        description: "A JSON formatted object providing the taxon hierarchy"
  site_inner_sites:
    properties:
      site_id:
        type: "integer"
        format: "int32"
        description: "Unique identifier for a specific site from the respective databases"
      lat:
        type: "number"
        format: "double"
        description: "Site latitude"
      lon:
        type: "number"
        format: "double"
      site_name:
        type: "string"
        description: "Site name"
  site_inner:
    properties:
      sites:
        $ref: "#/definitions/site_inner_sites"
  assemblage_inner_table:
    properties:
      taxon:
        type: "string"
        description: "netsi"
      element:
        type: "string"
        description: "netsi"
      value:
        type: "integer"
        format: "int32"
        description: "netsi"
    description: "netsi"
  assemblage_inner:
    properties:
      sp_grid:
        type: "array"
        description: "netsi"
        items:
          type: "string"
      tm_grid:
        type: "array"
        description: "netsi"
        items:
          type: "string"
      var_unit:
        type: "string"
        description: "netsi"
      site_count:
        type: "integer"
        format: "int32"
        description: "netsi"
      table:
        type: "array"
        items:
          $ref: "#/definitions/assemblage_inner_table"
